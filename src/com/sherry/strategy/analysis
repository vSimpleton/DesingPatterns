策略模式：
其思想是针对一组算法，将每一种算法都封装到具有共同接口的独立的类中，从而使它们可以相互替换。
策略模式的最大特点是使得算法可以在不影响客户端的情况下发生变化，从而改变不同的功能。
可提高软件的可维护性和可扩展性。

策略模式体现了面向对象程序设计中非常重要的两个原则：
（1）封装变化的概念。
（2）编程中使用接口，而不是使用的是具体的实现类(面向接口编程)。

编写步骤：
（1）定义抽象策略角色(为策略对象定义一个公共的接口)
（2）编写具体策略角色(实际上就是实现上面定义的公共接口)
（3）定义环境角色，内部持有一个策略类的引用

策略模式的缺点：
策略模式把每一种具体的策略都封装成一个实现类，如果策略有很多的话，则实现类就会过多，显得臃肿。

Head First中策略模式的定义：
策略模式定义了算法族，分别封装起来，使它们之间可以相互替换，此模式让算法的变化独立于使用算法的客户。